<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.7.0">Jekyll</generator><link href="htpps://www.doug-skinner.com/feed.xml" rel="self" type="application/atom+xml" /><link href="htpps://www.doug-skinner.com/" rel="alternate" type="text/html" /><updated>2018-02-21T15:59:11-05:00</updated><id>htpps://www.doug-skinner.com/</id><title type="html">Doug Skinner’s Blog</title><subtitle>My own thoughts and opinions on software engineering topics, wider technology, people, and what ever else comes up.
</subtitle><entry><title type="html">Basic Server Administration - Day 3</title><link href="htpps://www.doug-skinner.com/writing/2018/02/21/Basic-Server_Administration-3.html" rel="alternate" type="text/html" title="Basic Server Administration - Day 3" /><published>2018-02-21T11:00:00-05:00</published><updated>2018-02-21T11:00:00-05:00</updated><id>htpps://www.doug-skinner.com/writing/2018/02/21/Basic-Server_Administration-3</id><content type="html" xml:base="htpps://www.doug-skinner.com/writing/2018/02/21/Basic-Server_Administration-3.html">&lt;p&gt;Yesterday before we installed screen I briefly mentioned a program on your server called man, and glossed over what the program actually does. So today, we’re going to learn about man and why it should be the first thing you do when using a new command.&lt;/p&gt;

&lt;p&gt;A good first step is to run the command on itself. To follow along, that would be:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;man man&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Which will pop open a new screen that gives a description for the man command. The first entry is the name of the command, which includes the command that you type at the terminal and a brief description of what it does. When learning a new command this is very handy, as the description can save you a google on it’s own.&lt;/p&gt;

&lt;p&gt;Following the name is a synopsis of the command. This is useful as it show a shorthand of the various options that can be used with the command. After that, there is a roughly paragraph long description of the command that just expands upon the shorter bit above. The last bit of useful information is the options section. This lists each command line flag that the command can take, and gives a description of what the flag does to the command.&lt;/p&gt;

&lt;p&gt;As an exercise to learn man and yum, your next task is to use man to find the command line option to search the yum repositories for the rsync command, then attach to your update screen and install the rsync command there. I’ll give the command at the start of the post for tomorrow.&lt;/p&gt;</content><author><name></name></author><category term="Development" /><summary type="html">Yesterday before we installed screen I briefly mentioned a program on your server called man, and glossed over what the program actually does. So today, we’re going to learn about man and why it should be the first thing you do when using a new command.</summary></entry><entry><title type="html">Basic Server Administration - Day 2</title><link href="htpps://www.doug-skinner.com/writing/2018/02/19/Basic-Server-Administration-Day-2.html" rel="alternate" type="text/html" title="Basic Server Administration - Day 2" /><published>2018-02-19T11:00:00-05:00</published><updated>2018-02-19T11:00:00-05:00</updated><id>htpps://www.doug-skinner.com/writing/2018/02/19/Basic-Server-Administration-Day-2</id><content type="html" xml:base="htpps://www.doug-skinner.com/writing/2018/02/19/Basic-Server-Administration-Day-2.html">&lt;p&gt;Now that you can log on to your server with ease, the next thing that we want to do is make sure that it is always up to date. But before we do that I want to just briefly explain how user sessions work for your server. When you log in to your server using the ssh command from yesterday, the server opens a session for your user account.&lt;/p&gt;

&lt;p&gt;You can open multiple sessions this way by either logging on from multiple computers or simply opening a new terminal window and logging in again. This session persists until you either exit the server or close your browser window. Now, why is this important to bring up when learning about keeping your server up to date? Well, put simply having your session end while your server is updating is the number one way to ruin your operating system.&lt;/p&gt;

&lt;p&gt;Since this can happen if you accidentally close your terminal window or even just lose wifi, then it makes sense to take measures to ensure that this doesn’t happen to you. One way, and what I would argue is the easiest way, is to install a program called screen. A brief description from screen’s man page:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Name: screen - screen manager with VT100/ANSI terminal emulation&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;For a more detailed overview you can read the man page, more detail on what that actually is tomorrow, but in essence, screen allows you to have multiple background sessions running on the server. This means that if you do your updating in this background session, then it can never end unless the server gets shut off which helps ensure that your server doesn’t get ruined.&lt;/p&gt;

&lt;p&gt;To install screen, log on to the server and run the following command:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sudo yum install screen -y&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Which will install screen onto the server using the default package manager for centos. Now that it’s installed we can launch a screen session using:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;screen&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This will launch you into a new session. Now, to leave the session running in the background run:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;control+a+d&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;And to rejoin the session:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;screen -r&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;And now that we’re back in the session, to fully update the server run:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sudo yum update -y&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;And after watching all of the text fly across the screen, type the leave command at any point to let that update run in the background and you can go on your merry way. From now on, every time that you need to update your software or install a new package just re-attach to that screen session and run it there. Tomorrow we’ll take a look at learning the man command through diving deep to learn more about the yum and screen commands that we used today.&lt;/p&gt;</content><author><name></name></author><category term="Development" /><summary type="html">Now that you can log on to your server with ease, the next thing that we want to do is make sure that it is always up to date. But before we do that I want to just briefly explain how user sessions work for your server. When you log in to your server using the ssh command from yesterday, the server opens a session for your user account.</summary></entry><entry><title type="html">Basic Server Administration - Day 1</title><link href="htpps://www.doug-skinner.com/writing/2018/02/18/Basic-Server-Admin-1.html" rel="alternate" type="text/html" title="Basic Server Administration - Day 1" /><published>2018-02-18T11:00:00-05:00</published><updated>2018-02-18T11:00:00-05:00</updated><id>htpps://www.doug-skinner.com/writing/2018/02/18/Basic-Server-Admin-1</id><content type="html" xml:base="htpps://www.doug-skinner.com/writing/2018/02/18/Basic-Server-Admin-1.html">&lt;p&gt;After yesterdays post about who should be learning server administration, it’s time to actually start learning. The first step is to get yourself a linux machine and install Centos 7 on it, as that is what we will be using throughout this. With most hosting providers this is simply an option that you select when you’re signing up. The other required technologies are a computer running Mac OS, as that is what I use day to day so that’s the easiest for me to test.&lt;/p&gt;

&lt;p&gt;The first thing that you will probably do with your server is want to get onto it, normally through ssh. The command for this on your Mac is:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ssh username@ip.ad.dr.ess&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;After you type that, you should receive a prompt on your screen asking you for your password. Now, because you will be doing this frequently, or at least you should be to be properly learning, typing the password every time will quickly become tiresome. So we’re going to use key based authentication. Key based authentication works by generating a public key and a private key that work together. What this means is when you try to log onto a server, your laptop is going to hand your private key to the server, and if it matches with one that the server has in its key list then you can logon without using a password.&lt;/p&gt;

&lt;p&gt;To start this process, on terminal on your mac type the following:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ssh-keygen -t RSA&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;which means that we will be generating an ssh key with the RSA encryption scheme. If you choose you can enter a password when prompted, and you should save it within the default location. Then type&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cat ~/.ssh/id_rsa.pub | pbcopy&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;which just copies the public portion of the key that was just created to the system clipboard. Then ssh to the server using the ssh command from above, and do the following:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;mkdir .ssh&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;vi .ssh/authorized_keys&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now we are in a command line text editor named vi, which will seem extremely confusing at first, and we’ll get into it one day but for now just hit the &lt;code class=&quot;highlighter-rouge&quot;&gt;i&lt;/code&gt; key, hit &lt;code class=&quot;highlighter-rouge&quot;&gt;command+v&lt;/code&gt; to paste the public key from your clipboard, hit the &lt;code class=&quot;highlighter-rouge&quot;&gt;esc&lt;/code&gt; key on your keyboard, then type &lt;code class=&quot;highlighter-rouge&quot;&gt;:wq&lt;/code&gt; and you’re out. Now just to quickly breeze through the wizardry that we just went through, we went into &lt;strong&gt;i&lt;/strong&gt;nsert to put text into the file, pasted the text into the file, &lt;strong&gt;esc&lt;/strong&gt;aped from insert mode, and then &lt;strong&gt;w&lt;/strong&gt;rote the file and &lt;strong&gt;q&lt;/strong&gt;uit from the file.&lt;/p&gt;

&lt;p&gt;Now to try this out type&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;quit&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;which will have you leave the server. Then if we did everything right, after trying to ssh again, that command from the top, you should be able to log into the server without using your password. Again, this seems like a little thing but trust me it will be very helpful going forward.&lt;/p&gt;</content><author><name></name></author><category term="Development" /><summary type="html">After yesterdays post about who should be learning server administration, it’s time to actually start learning. The first step is to get yourself a linux machine and install Centos 7 on it, as that is what we will be using throughout this. With most hosting providers this is simply an option that you select when you’re signing up. The other required technologies are a computer running Mac OS, as that is what I use day to day so that’s the easiest for me to test.</summary></entry><entry><title type="html">Should You Learn Server Administration?</title><link href="htpps://www.doug-skinner.com/writing/2018/02/17/Who-Should-Learn-Server-Administration.html" rel="alternate" type="text/html" title="Should You Learn Server Administration?" /><published>2018-02-17T11:00:00-05:00</published><updated>2018-02-17T11:00:00-05:00</updated><id>htpps://www.doug-skinner.com/writing/2018/02/17/Who-Should-Learn-Server-Administration</id><content type="html" xml:base="htpps://www.doug-skinner.com/writing/2018/02/17/Who-Should-Learn-Server-Administration.html">&lt;p&gt;So, I’ve been asked by a few people both at work and school about who should learn server administration. While I am by no means an expert at administrating servers, I do keep a healthy homelab of between fifteen and twenty servers and I help maintain roughly the same amount of servers here at my day job so I do have some basic knowledge. I will try to outline a few people who should look into this, and also a few reasons as to why they should.&lt;/p&gt;

&lt;p&gt;The first group of people that may be curious about server administration are those who are looking to either switch careers from something else into server administration or those who are looking to make the jump from help desk, or related, to being an administrator. While being a server administrator is not the easiest role in the world, knowing the basics is certainly doable for the average person interested in technology. The second group of people would be developers looking to launch a website or other online service, maybe a server component for a mobile application or related, and wish to have control over where that will be hosted.&lt;/p&gt;

&lt;p&gt;By following the path of becoming a server administrator one will gain a basic understanding of how the internet operates, as each and every website that you visit throughout the day is run by technologies that are roughly the same as what you will be learning. Once you have learned this information yourself, it will be easy for you to apply among any number of uses, whether that be a virtual machine on your laptop or desktop or even on a hosted virtual private server (VPS) hosted at a hosting provider. The only difference between the two are where the machine is located.&lt;/p&gt;

&lt;p&gt;For those simply looking to become server administrators, that means that this knowledge will be easily transferrable among any company that you wish to work for. Those developers looking to launch their own site will reap greater benefit as it will allow you to host your site with any hosting provider, so you can jump between them until you find the right mix of price and customer support as you see fit. This lack of provider tie in becomes even more important when the developer realizes that they don’t have to host everything under the sun with AWS. There is nothing wrong with hosting services on AWS, but one can normally save time, money and stress by being able to host their site on any old box that runs linux.&lt;/p&gt;

&lt;p&gt;I am continually amazed by the amount of classmates that I talk to that don’t even realize there is another option to hosting a website that isn’t on the platform provided by AWS. They are even more amazed to learn how simply having one load balancer and two web servers behind it sets them up to scale almost infinitely for a time. While there are limitations to that, trust me by the time that you hit them you should easily be making enough money from your site or service that upgrading from that setup can be the problem of someone that you hire.&lt;/p&gt;

&lt;p&gt;Considering the above benefits of learning a new skill for career advancement or ease of launching a new project, for anyone even thinking about starting to learn server administration the answer should be a resounding yes. Over the next few days and weeks I’ll be putting together a series of posts that will allow one to begin the path of server administration by starting with a blank VPS and getting to the point of having a secure one page website. Now, what can one do with one page site? They can have it be a simple resume site, or even turn it into a bunch of pages kind of like the blog that you are currently reading. Neat, huh?&lt;/p&gt;</content><author><name></name></author><category term="Development" /><summary type="html">So, I’ve been asked by a few people both at work and school about who should learn server administration. While I am by no means an expert at administrating servers, I do keep a healthy homelab of between fifteen and twenty servers and I help maintain roughly the same amount of servers here at my day job so I do have some basic knowledge. I will try to outline a few people who should look into this, and also a few reasons as to why they should.</summary></entry><entry><title type="html">Found Vs Made Photography</title><link href="htpps://www.doug-skinner.com/writing/2018/02/12/Found-Vs-Made-Photography.html" rel="alternate" type="text/html" title="Found Vs Made Photography" /><published>2018-02-12T11:00:00-05:00</published><updated>2018-02-12T11:00:00-05:00</updated><id>htpps://www.doug-skinner.com/writing/2018/02/12/Found-Vs-Made-Photography</id><content type="html" xml:base="htpps://www.doug-skinner.com/writing/2018/02/12/Found-Vs-Made-Photography.html">&lt;p&gt;There is a common misconception today that photography as an art form is a medium akin to painting or drawing, thus allowing the photographer to share their vision of the world with those who view the work. While it is true that viewing a photo does allow one to see how the world appears to the artist, there is no reason to believe that the artist is creating that world. Considering other mediums of art, using painting as an example, when the artist sets out to capture their subject exactly as how it is seen, the subject can often appear different in the final product. That’s not to say that the artist set out to modify the subject, however it is often unavoidable. For example, when painting a flower, there are a few things that can be changed from reality without the artist noticing. The easiest of these for others to see would be the color of the flower, for even if the artist matches the color they see entirely accurately there is no guarantee that the color is true to how others perceive it. Again, this is not a mistake made by the artist, it is simply the reality of relying on the human eye to accurately detect color.&lt;/p&gt;

&lt;p&gt;In contrast, when using a camera with sufficient technology this is impossible as the camera will capture the true color of the object regardless of what it’s operator sees. One of the wonders of photography though is that through the magic of post-processing, either digital or analog, it is possible for the artist to change how the colors or even subjects appear within the photo. This single aspect distinguishes photography as being different as it allows for two different categories of photography to exist, that of the found image and that of the made image.&lt;/p&gt;

&lt;p&gt;The found image is often what most photographers start with when they first begin taking photos. A found image is one that represents what the artist saw in front of them at the time of hitting the shutter, but also relies upon the content of the photo having been there before the photographer decided to take the image. Many start here as it is relatively easy to just walk around capturing images of what’s in front of you. That is not to say though, that capturing a good found image is easy; This requires being in the right place at the right time, and for the photographer to have a sense of how the image will look before taking it.&lt;/p&gt;

&lt;p&gt;Arguably the most well-known form of found photography is street photography. The image of a photographer walking the streets of a big city and snapping pictures of the interesting things going on around them is a familiar one to anyone that’s paid attention to photography. This is also the style of photography that was common in the mid twentieth century, as it allowed those that lived within New York City to share the wonders of the big city with those in America who didn’t. As the street photographer must act quickly to capture the events unfolding around them, there is little room for them to make the images into something they aren’t.&lt;/p&gt;

&lt;p&gt;The other well-known genre of found photography is landscape photography, where exactly as it sounds the photographer goes out and captures the landscape in front of them. This can be anything from a sweeping mountain range to a lush forest or a city off in the distance. It’s with these images though where a beginner photographer may start drifting into made photography. Most people when trying to make their photography better delve into learning how to “post-process” their images. In landscape photography, one may not see it as a big deal to simply make the green of the trees a little greener, or the water in the lake a little blue-er, however by doing so they are manipulating the image to be different from what the naked eye sees.&lt;/p&gt;

&lt;p&gt;There is nothing wrong with photographers doing this, it is simply good to note that when doing so a photographer moves from showing his surroundings to showing how he perceives his surroundings. Another slight crossover genre of photography is that of the portrait photographer. While one may start taking photos of those around them in natural light, doing so may lead the photographer to look into using extra light which changes the image. Or a photographer’s client may request that the photographer remove imperfections within the image such as stray hairs or acne, which while helpful to the subject does change the image.&lt;/p&gt;

&lt;p&gt;This is not to say that lighting or changing the images in post is the only way to “make” and image. Regarding portrait photography again, there are many things the photographer can change before taking the picture that moves the image towards the made end of the spectrum including having the subject of the photograph go to certain locations, having them wear certain clothes or makeup, or even changing who the subject is. This can then go even further if the photographer chooses to, mostly through post processing. Using Photoshop or one of its many competitors for post processing is what truly allows the photographer to delve into the made photography spectrum, as using these programs allow skilled artists to manipulate the images in almost any way that they choose. This can be anything from changing colors to removing items in the frame to adding items to the frame, all of which allow the artist to show us their view of the world rather than just the world.&lt;/p&gt;

&lt;p&gt;Both of found and made photography have their place within the world, and neither is initially better than the other. Without having both, the world of photography would be a much simpler and more boring world, and the art scene would be without some of the major game changers within the medium.&lt;/p&gt;</content><author><name></name></author><category term="Photography" /><summary type="html">There is a common misconception today that photography as an art form is a medium akin to painting or drawing, thus allowing the photographer to share their vision of the world with those who view the work. While it is true that viewing a photo does allow one to see how the world appears to the artist, there is no reason to believe that the artist is creating that world. Considering other mediums of art, using painting as an example, when the artist sets out to capture their subject exactly as how it is seen, the subject can often appear different in the final product. That’s not to say that the artist set out to modify the subject, however it is often unavoidable. For example, when painting a flower, there are a few things that can be changed from reality without the artist noticing. The easiest of these for others to see would be the color of the flower, for even if the artist matches the color they see entirely accurately there is no guarantee that the color is true to how others perceive it. Again, this is not a mistake made by the artist, it is simply the reality of relying on the human eye to accurately detect color.</summary></entry><entry><title type="html">Prex</title><link href="htpps://www.doug-skinner.com/projects/2018/02/09/Prex.html" rel="alternate" type="text/html" title="Prex" /><published>2018-02-09T12:00:00-05:00</published><updated>2018-02-09T12:00:00-05:00</updated><id>htpps://www.doug-skinner.com/projects/2018/02/09/Prex</id><content type="html" xml:base="htpps://www.doug-skinner.com/projects/2018/02/09/Prex.html">&lt;p&gt;The &lt;strong&gt;P&lt;/strong&gt;ython &lt;strong&gt;R&lt;/strong&gt;eguler &lt;strong&gt;Ex&lt;/strong&gt;pression handler is a basic script written in
Python (shocking I know) that reads in a regex string and the file to search.&lt;/p&gt;

&lt;p&gt;Rather than using the built in regex class/parser, Prex then creates a
&lt;a href=&quot;https://en.wikipedia.org/wiki/Deterministic_finite_automaton&quot;&gt;DFA&lt;/a&gt; from the
input regex string, to allow the regex to be processed. After reading in the
input file, separated line by line on newline characters (‘\n’), the script then
feeds in each line to the internal DFA character by character. If the DFA
reaches the end state, it then returns the starting index, ending index, and all
characters that match the regex printing that info to stdout.&lt;/p&gt;</content><author><name></name></author><summary type="html">The Python Reguler Expression handler is a basic script written in Python (shocking I know) that reads in a regex string and the file to search.</summary></entry><entry><title type="html">Constructing A DFA From A Regex</title><link href="htpps://www.doug-skinner.com/writing/2018/02/09/DFA-for-Regex.html" rel="alternate" type="text/html" title="Constructing A DFA From A Regex" /><published>2018-02-09T11:00:00-05:00</published><updated>2018-02-09T11:00:00-05:00</updated><id>htpps://www.doug-skinner.com/writing/2018/02/09/DFA-for-Regex</id><content type="html" xml:base="htpps://www.doug-skinner.com/writing/2018/02/09/DFA-for-Regex.html">&lt;p&gt;While creating &lt;a href=&quot;https://doug-skinner.com/projects/2018/02/09/Prex.html&quot;&gt;Prex&lt;/a&gt;,
one of the major challenges was trying to figure out the best way to represent a
walkable path through the regular expression without just resorting to the built in regular
expression class within Python. After some deliberation, and a failed attempt of
trying to keep track of my position walking through the string iteself, I
remembered from my Automata class that a regular expression has to be able to be
represented within a
&lt;a href=&quot;https://en.wikipedia.org/wiki/Deterministic_finite_automaton&quot;&gt;Deterministic Finite Automaton&lt;/a&gt; or it’s
not valid, so I decided to construct one of those. In order to do this, I would
need three classes, one to represent each state of the DFA, one to represent the
actual DFA, and then one to read in the file and the regex string to be
processed. Since the actual code for the project can be found both on my personal GitLab
and Github I won’t be showing the actual code here, just describing the thought
process.&lt;/p&gt;

&lt;p&gt;Creating the state representation was relatively simple. It has three
internal variables, one to hold any possible loop variables, one to hold any
possible transition variables, and then one to represent the next state. The
reason for that last variable is to represent the possible states as a linked
list of states, to easily keep track of the beginning and end of the list. In
order to create the DFA from the regex, a blank state is created initially.
Then, for each character a new state is created, the transition variable is set
to the character, and then the previous state’s next state is set to the current
state.&lt;/p&gt;

&lt;p&gt;The only exception to this is if the character is +, *, [, or ]. If the
character is a +, which means that the character can appear one or many times,
then a new state is added with a loop variable that matches the previous states
transition variable and the transition variable is set to ‘’. Aside, in this DFA
a transition of ‘’ is treated as a null transition allowing it to be
transitioned across at any time. If the character is a *, which means that the character can be there zero or
any number of times, the previous characters transition variable is moved to the
loop variable, and the transition variable is set to ‘’. This allows it to be
looped infinitely or skipped entirely.&lt;/p&gt;

&lt;p&gt;The last part of the construction is if the character is a [. If it is, then a
flag is set indicating that we are currently within brackets. While that flag is
set, all characters encountered are added to the transition variable of the
current state. Once we encounter a ], we turn that flag off and continue. And
thus, the DFA is made and we can start processing the passed in strings.&lt;/p&gt;</content><author><name></name></author><category term="Development" /><summary type="html">While creating Prex, one of the major challenges was trying to figure out the best way to represent a walkable path through the regular expression without just resorting to the built in regular expression class within Python. After some deliberation, and a failed attempt of trying to keep track of my position walking through the string iteself, I remembered from my Automata class that a regular expression has to be able to be represented within a Deterministic Finite Automaton or it’s not valid, so I decided to construct one of those. In order to do this, I would need three classes, one to represent each state of the DFA, one to represent the actual DFA, and then one to read in the file and the regex string to be processed. Since the actual code for the project can be found both on my personal GitLab and Github I won’t be showing the actual code here, just describing the thought process.</summary></entry><entry><title type="html">Flask Template</title><link href="htpps://www.doug-skinner.com/projects/2018/01/23/flask-template.html" rel="alternate" type="text/html" title="Flask Template" /><published>2018-01-23T12:00:00-05:00</published><updated>2018-01-23T12:00:00-05:00</updated><id>htpps://www.doug-skinner.com/projects/2018/01/23/flask-template</id><content type="html" xml:base="htpps://www.doug-skinner.com/projects/2018/01/23/flask-template.html">&lt;p&gt;&lt;strong&gt;This is still a work in progress&lt;/strong&gt;. This project aims to be a template for other web developers to base their
projects off of. The template includes a couple of classes that handle creating
users, logging in users, and eventually managing users. Each user upon logging
in is presented with their own control panel for whatever service they are
logging into.&lt;/p&gt;

&lt;p&gt;As stated above, this project is a work in progress, and I will be posting updates below as they happen, and updating through blog posts.&lt;/p&gt;</content><author><name></name></author><summary type="html">This is still a work in progress. This project aims to be a template for other web developers to base their projects off of. The template includes a couple of classes that handle creating users, logging in users, and eventually managing users. Each user upon logging in is presented with their own control panel for whatever service they are logging into.</summary></entry><entry><title type="html">Downloading Isn’t Stealing</title><link href="htpps://www.doug-skinner.com/writing/2018/01/22/More-NN-Thoughts.html" rel="alternate" type="text/html" title="Downloading Isn't Stealing" /><published>2018-01-22T12:00:00-05:00</published><updated>2018-01-22T12:00:00-05:00</updated><id>htpps://www.doug-skinner.com/writing/2018/01/22/More-NN-Thoughts</id><content type="html" xml:base="htpps://www.doug-skinner.com/writing/2018/01/22/More-NN-Thoughts.html">&lt;p&gt;&lt;strong&gt;Warning&lt;/strong&gt;: This post is very long. Read at your own risk.&lt;br /&gt;
Also as part of my class discussed previously, I had to write a term paper on
any topic that my little heart desired, as long as it related to the class. The
topic was copyright law in the online realm, and what follows is the paper. Enjoy.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Currently there is a conversation ongoing within the United States about stealing. This discussion however, isn’t about the theft of physical property. The discussion is instead focused on the common act among internet users of copying and sharing files and whether that should be considered stealing according to United States law. Currently according to the United States Code, Title 17: Sections 501 and 506 (17 U.S. Code § 506), any unauthorized copying is against federal law, and the law prescribes severe civil and criminal penalties for the act. This law, and the punishments defined within are based on treating the digital copying of files, called digital theft, the same as physical theft. Based on the actions of most individuals within society however, the argument can and should be made to not treat the actions as equivalent.&lt;/p&gt;

&lt;p&gt;According to Reynolds, intellectual property is the “term used to describe works of the mind—such as art, books, films, formulas, inventions, music, and processes—that are distinct and owned or created by a single person or group.” (Reynolds, G. 2014). This intellectual property is governed through various governments through copyright, patent, and trade secret laws. The two sets of laws that most frequently govern the acts of copying online files are copyright laws and patent laws, protecting art, books, film, and music or inventions respectively. According to Article 1, Section 8, Clause 8 congress shall have the power “to promote the Progress of Science and useful Arts, by securing for limited Times to Authors and Inventors the exclusive Rights to their respective Writings and Discoveries.” (Article 1, Section 8, Clause 8. 2000). Also, according to Reynolds, a copyright is the “exclusive right to distribute, display, perform, or reproduce an original work in copies or to prepare derivative works based on the work.” (Reynolds, G. 2014). Any person found to be in violation of the rights held by a copyright holder is committing copyright infringement. According to current United States law the courts have much ability to pursue or make example cases of copyright infringement, as they have the power to award fines anywhere from $200 to $100,000. Current copyright law guarantees the holder to the rights to their work for a period of several years.&lt;/p&gt;

&lt;p&gt;At the bidding of lobbyists from those who stand to gain a lot by extending copyright, the term of copyright has been extended 11 times in the timespan starting in 1960. The people primarily behind the lobbyists are mostly movie studios and other large holders of multiple copyrights to merchandising empires. The reason behind fighting so hard for copyright extensions is that the studios make most of their profit from selling toys, movies, and other tie-ins for their various iconic properties.&lt;/p&gt;

&lt;p&gt;The original term of copyright was twenty-eight years, however the Copyright Term Extension Act signed into law in 1998 sets out the time limits outlined as follows (COPYRIGHT TERM EXTENSION):&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;For works created after January 1, 1978, copyright protections endure for the life of the author plus 70 years.&lt;/li&gt;
  &lt;li&gt;For works created but not published or registered before January 1, 1978, the term endures the life of the author plus 70 years, but also guarantees that it expires no earlier than December 31, 2004.&lt;/li&gt;
  &lt;li&gt;For works created before 1978 that are still within their original term of copyright the total term is to be extended to 95 years from the original date of copyright.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Once this act was signed into law, it was challenged by Eric Eldred. Eldred wanted to create an online library of sorts, where older books would be available for viewing to those who otherwise wouldn’t have access to them. The Eldred v. Ashcroft case went all the way to the United States Supreme Court, which upheld the act as constitutional in 2003. After the Supreme Court made this decision, many internet activists revolted against it, not unlike what occurred during the attempted passing of PIPA and SOPA in 2012. The activists attempted to get Congress to change the law through appeals directly to its members, and even started a campaign to amend the Constitution (Wu, T. 2003). Other members of the internet activist groups however fought to fix this wrong doing another way. The activists argued that as they had the power to write code to either enforce the law or allow it to be broken easier, that power should be used to directly influence the publics conformance or not with the law. While that is not to say that the activists directly encouraged the breaking of the law, it can be stated that the like great tax lawyers can find loopholes within the tax code, great programmers and activists should likewise look to exploit the copyright protections within any possible legal loopholes (Wu, T. 2003). Thus, semi-organized resistance to copyright law was discussed for the first time regarding the digital realm.&lt;/p&gt;

&lt;p&gt;One of the major defenses used by these activists, and unfortunately those who do go on to break the law, is the concept of the Fair Use Doctrine. Renyold’s defines it as “allowing portions of copyrighted materials to be used without permission under certain circumstances.” (Reynolds, G. 2014). The United States Code, according to Title 17 Section 107 states that “the fair use of a copyrighted work, including such use by reproduction in copies or phonorecords or by any other means specified by that section, for purposes such as criticism, comment, news reporting, teaching (including multiple copies for classroom use), scholarship, or research, is not an infringement of copyright.” (17 U.S. Code § 107). The law also outlines the following four considerations to use when determining whether a specific use of a copyrighted work falls within fair use.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The purpose and character of the use, including whether such use is of a commercial nature or is for nonprofit educational purposes;&lt;/li&gt;
  &lt;li&gt;The nature of the copyrighted work;&lt;/li&gt;
  &lt;li&gt;The amount and substantiality of the portion used in relation to the copyrighted work as a whole;&lt;/li&gt;
  &lt;li&gt;Finally, the effect of the use upon the potential market for or value of the copyrighted work.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The law also concludes by stating that the above guidelines are to be used whether the copyrighted work is published or not.&lt;/p&gt;

&lt;p&gt;An application of the Fair Use Doctrine in 2011 was when the HathiTrust Digital Library had a lawsuit filed against them by the Authors Guild, an advocacy group for writers. The reasoning behind the lawsuit was that multiple digital copies of a work or text were created through the simple act of building the library, that HathiTrust Digital Library was violating copyright by reproducing copyrighted works without the explicit permission of each copyright holder. While the courts did eventually side with the library, stating that by transferring the works from a written form to digital form the library was falling under transformative use, an all too common counter point to this ruling is the continued prosecution of those who share music or other forms of media digitally.&lt;/p&gt;

&lt;p&gt;In the book “What if We Could Re-Imagine Copyright”, Christophe Geiger argued that copyright protections are key to the continued survival of many forms of creative expression (Geiger, C. 2017). While Geiger does acknowledge that copyrights are mostly beneficial for large corporations, he still argues for the continued use of copyright. The argument can be made that artists will be loath to continue producing content without the knowledge that their work will be free from copying, however in modern times it seems that this is no longer the case. This can be seen in the large number of people creating songs, videos, and other creations and either open-sourcing the contents or uploading them to platforms where the platform owner holds the ownership of the content. This counter-argument can then be extended to considering if people are willing to give up ownership of a work entirely, that there should be no qualms about the sharing of their content to new audiences.&lt;/p&gt;

&lt;p&gt;Once someone follows this train of thought, it begs the question of whether copying digital bits to a friend is ethical instead of illegal. Once taken out of the realm of legality into the realm of everyday thought, it seems remarkable that this conversation has even continued in the days of easy access to everything online. While the law unfairly equivocates downloading a copyrighted work with common law stealing, what should be considered the more important question to an individual that is about to commit this act is how a group of their peers, also known as a jury, would see this action. The reason this is important is that while the laws of a country are seemingly set in stone, in most developed countries it is the will of the people, again that group of your peers, that can help shape and change the way the law works. This process of change allows the laws to be continually updated to reflect what society considers to be unethical.&lt;/p&gt;

&lt;p&gt;Before the topic can be discussed, a brief description on the difference between illegal (legal) and unethical (ethical) is necessary. Legal means something recognized or made effective by a court of law as distinguished from a court of equity, whereas ethics is defined as the moral principles of an individual. Defined in plain English, for an action to be illegal it must be against a written law, whereas an action must be considered immoral to a person to be ethically wrong. Now, a definition of moral, sanctioned by one’s conscience, will be helpful here. While legality is based on written laws which are notoriously hard to change in the United States no matter how easy that should be, ethicality is based on one’s own belief of what is right and wrong. And, as can be seen on Wiring the Brain (Mitchell, K. 2011, June 13), the morals of one person come from those around the individual.&lt;/p&gt;

&lt;p&gt;Once this fact has been accepted, it is not that far of a jump to conclude how a law is originally created. A law is a cemented moral based upon a specific point in time. As anyone who’s ever watched the American political system flounder to change the laws put into place by the previous administration has learned, laws are difficult to change simply because they are easily defended by those who they protect. What does this mean? Well, it means that while morals evolve based on what a group of people currently think, laws are based upon what a group decided to write down at some point in the past. This means that there is going to naturally be some drift between the two of these points. And due to the difficulty of changing the written laws, the gap only increases over time. So, while everyone can agree, at least within the United States, that downloading content that you don’t currently have an agreement to have access to is illegal the real question is to whether this same act is unethical.&lt;/p&gt;

&lt;p&gt;This depends entirely upon what society currently thinks, and I think that the argument can be made that society agrees that downloading is not stealing which goes back to the definition of stealing. The definition of stealing is defined as follows: party A has an item, and party B doesn’t; Party B then takes the item from party A; Now party B has it and party A doesn’t. This is a zero-sum problem, where only one party can have the item at once. That’s why common theft is considered both illegal and unethical as it means that one person’s loss is another person’s gain.&lt;/p&gt;

&lt;p&gt;Downloading an item, such as an mp3 file, is not zero sum however. If an mp3 is taken, copied it, and given to another party the first party still has their copy of the mp3 and now someone else does too. This means that both parties have the file, resulting in one person’s gain and another person’s neutral. It should be easy to agree that between having a zero-sum vs a positive sum outcome, the positive sum is more desired. And if the outcome is more desired, there is absolutely no reason that it should be made, or continue to be, against the law. And it seems that most of current American society would agree with me.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;rounded img-fluid shadow&quot; src=&quot;/img/post_images/Piracy_Percentages_Wide.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;(Mick, J. 2013, January 21)&lt;/p&gt;

&lt;p&gt;Another argument for the easing of copyright laws is that most great works of history have been derivative in some manner. A derivative work is an expressive creation that includes major elements of an original copyright protected work, without consisting entirely of the original work. According to law, the work must be considered original and bear the marks of the new artist in order to be truly derivative instead of simply copying. While one of the most famous examples of a derivative work, the LHOOQ, is simply a joke consisting of the Mona Lisa painting originally created by Leonardo da Vinci repainted to include a moustache, there is no reason to believe that is the only form of derivative work. Most media that the American public consumes is derivative in some way. Late night comedy shows almost entirely consist of poking fun at the actions of those around them within society, or mocking popular culture elements of TV Shows. Considering TV shows, two of the most popular shows in America Family Guy and The Simpsons are incredibly derivative, as both shows not only have entire characters that are simply parodies of characters, both real and cartoon, but also have entire episodes that consist of making fun of another show or movie.&lt;/p&gt;

&lt;p&gt;Examples such as these aren’t limited to TV shows, as movies and books have done the same thing. After the Lord of the Rings became a popular book, the entire genre of fantasy consisting of made up worlds with original languages and creatures that never existed before exploded into popularity. Harry Potter serves as another book that helped to spark the love of fantasy within another generation of society. Similarly, the book Dune is considered a large part of the popularity of Science Fiction, and the entire Star Wars franchise is entirely based off the success of the first movie, A New Hope, that is considered by many critics to be almost an entire rip off of the story from Dune (Kunzru, H. 2015, July 03). Disney, the new owners of Star Wars, are not unfamiliar with the concept of derivative works themselves, as most of their popular movies are based on simply taking stories from the Fairy Tales Grimm, making them appropriate for children by taking out references to death, murder, and the gruesome bits, and marketing them as if they were originally created by Disney.&lt;/p&gt;

&lt;p&gt;Going back to original example of the LHOOQ, most painters are very derivative as they grow upon the designs and ideas of those that came before them. Or, sometimes this takes the shape of going the other direction. An artist may consume so much of one type of media only to ensure that they go the entirely opposite direction to be original. However, originality only for the sake of not being derivative can be even be considered derivation itself as you must consume enough of a topic to make sure that your implementation doesn’t include anything that’s in the original. Finally, probably the most derivative genre of media of all is music, for many of the same reasons as painting. Music goes even further as many of the most popular songs nowadays are nothing more than rehashes of those that came before. An example recently in the news was when one rap artist produced a song, a second rap artist then remixed that song into another using the first as a hook. The original artist then took the song created by the second and used it as a hook for a third song. Creating a song of a song of a song is something that is only possible according to current societal morals as both artists didn’t care that the other took their work as it is commonplace among the music community. There is no reason that the same can’t be said for other communities.&lt;/p&gt;

&lt;p&gt;Information is power (Swartz , A. 2008, July). Many in history have said that before, and many will say it in the years to come. However, like all power in society there are those that want to make it so that they remain in power by keeping information, knowledge about everything within society to themselves. A perfect example of this is anyone who wants to read previous scientific and cultural research on a topic. This information is being increasingly held by a handful of private companies, that want to charge enormously large amounts of money to access that information. It is a sad fact that currently the final step in the research of many doctoral students is to turn in their paper, get it peer reviewed, accepted into the community, and then hand over the keys to the kingdom to those already in power. The knowledge gained is then held by the doctoral student, anyone who read it previously, and now anyone that want to pay online databases roughly a $100 per article for access.&lt;/p&gt;

&lt;p&gt;The online database companies take these matters very seriously, even pursuing legal actions against those who try to work around the safeguards that they have in place to stop the spread of knowledge. The most famous of these court cases involving JSTOR, notably the most well-known of the article stores, and a young man named Aaron Swartz. While on the campus of the Massachusetts Institute of Technology, Swartz had started downloading articles from JSTOR. While anyone on the campus has full access to JSTOR using their web portal, Aaron had written a script to simulate browsing the website to download multiple articles at once as fast as the computer could. All told, he got multiple hard drives worth of data for an unknown purpose. Swartz had said that he was using the papers he gathered for research purposes, something that is entirely within the rights of a JSTOR user. JSTOR, however, declared that he must be downloading the articles for the nefarious purpose of trying to open his own competing article database.&lt;/p&gt;

&lt;p&gt;Using the copyright laws that were stated within the first couple pages of this article and the Computer Fraud and Abuse Act of 1986, JSTOR brought legal action against Swartz, which involved him getting arrested by an FBI team. This eventually lead Swartz to be charged with multiple felonies and the chance of being ordered to pay restitution of over a million dollars. A million dollars, for what? Downloading some articles that anyone in the world that can make it to Boston can access for free? The prosecution ended abruptly when Aaron was found dead after the case was once again continued. While this may seem like an extreme example, this could become increasingly commonplace if the copyright laws aren’t adjusted to be realistic with the society of today that involves the use of so much online data.&lt;/p&gt;

&lt;p&gt;Without completely rehashing the arguments made above, it can be said that the main arguments for the changing of copyright laws are the differences between what is written law and what is believed by the common man, the effect that sharing works on knowledge can have, and how copyright serves to gate-keep that knowledge from those that need it the most. Through the surveys outlined above, it has been proven multiple times that the average person in America either sees no problem with internet piracy or is a pirate themselves. Since most seem okay to commit the act, it is highly doubtful that they believe that they should be prosecuted for breaking a law that is so out of touch with their actions and the actions of those around them. It is also clear to see that many works nowadays and in the past, are derivative in nature, whether that is painters and composers taking inspiration from their peers to the newer fascination that rappers and hip-hop artists have with remixing each other’s songs either adding a new rap verse or taking the chorus of one song to use as the refrain to another. Without the ability to do this, many of these artists would not be able to make the kinds of or amount of music that they currently do. Finally, in this day and age especially considering the number of times that this has gone wrong in the past it is frankly ridiculous that there should be keepers of knowledge. While there should always be libraries to store knowledge, the cost of obtaining that knowledge should be either physically getting to the library or navigating to the libraries webpage, not paying sometimes hundreds of dollars per article to access that information. Every time in history this same setup has occurred of those privileged few with access to all the knowledge leaving the plebeians with starvation of the mind, there has been some catastrophic event that causes the loss of all that knowledge.&lt;/p&gt;

&lt;p&gt;Judging the content contained within the body of this article, it should be relatively easy to assume where I stand on the issue, however I think it best to explicitly outline where I stand on the issue now that I have provided ample evidence in support. While an extreme view, even among my peers who spend most of their time within the digital realm, I believe that in the age of the internet copyright is a holdover of the past that is best to be forgotten about like the act of turning in papers written on scrolls or only passing knowledge orally. Personally, I am of the mind that the best works of humanity have yet to exist, will exist only through the continued use of technology, and will never exist if the current copyright system is allowed to continue unchanged.&lt;/p&gt;

&lt;p&gt;Following the discussions on this topic outlined above, it certainly seems necessary to rethink or totally abolish the use of copyright when it pertains to works that can and should so easily be shared within society today. The laws that were created and expanded upon before the internet was a commonality should not still be what governs the actions using its power. The world itself is a better place following the dissemination of knowledge and copyright laws only serve to go against the grain of time. Following this discussion, it looks like it might be time to update those laws America.&lt;/p&gt;

&lt;p class=&quot;text-center&quot;&gt;&lt;u&gt;Works Cited&lt;/u&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;About Piracy. (n.d.). Retrieved January 18, 2018, from &lt;a href=&quot;https://www.riaa.com/resources-learning/about-piracy/&quot;&gt;https://www.riaa.com/resources-learning/about-piracy/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Article 1, Section 8, Clause 8. (2000). Retrieved January 18, 2018, from &lt;a href=&quot;http://press-    pubs.uchicago.edu/founders/tocs/a1_8_8.html&quot;&gt;http://press-    pubs.uchicago.edu/founders/tocs/a1_8_8.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;BITTON, M. (2012). RETHINKING THE ANTI-COUNTERFEITING TRADE AGREEMENT’S CRIMINAL COPYRIGHT ENFORCEMENT MEASURES. The Journal of Criminal Law and Criminology (1973-), 102(1), 67-117. Retrieved from &lt;a href=&quot;http://www.jstor.org/stable/23145786&quot;&gt;http://www.jstor.org/stable/23145786&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;COPYRIGHT TERM EXTENSION. (n.d.). Retrieved January 17, 2018, from     &lt;a href=&quot;https://www.copyright.gov/legislation/s505.pdf&quot;&gt;https://www.copyright.gov/legislation/s505.pdf&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Geiger, C. (2017). Copyright as an access right: Securing cultural participation through the    protection of creators’ interests. In GIBLIN R. &amp;amp; WEATHERALL K. (Eds.), What if we could reimagine copyright? (pp. 73-110). Acton: ANU Press. Retrieved from &lt;a href=&quot;http://www.jstor.org/stable/j.ctt1q1crjg.6&quot;&gt;http://www.jstor.org/stable/j.ctt1q1crjg.6&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Kunzru, H. (2015, July 03). Dune, 50 years on: how a science fiction novel changed the     world. Retrieved January 18, 2018, from     &lt;a href=&quot;https://www.theguardian.com/books/2015/jul/03/dune-50-years-on-science-fiction-novel-world&quot;&gt;https://www.theguardian.com/books/2015/jul/03/dune-50-years-on-science-fiction-novel-world&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Mick, J. (2013, January 21). Nearly Half of Americans Pirate Casually, But Pirates Purchase     More Legal Content. Retrieved January 18, 2018, from &lt;a href=&quot;http://www.dailytech.com/NearlyHalfofAmericansPirateCasuallyButPiratesPurchaseMoreLegalContent/article29702.htm&quot;&gt;http://www.dailytech.com/NearlyHalfofAmericansPirateCasuallyButPiratesPurchaseMoreLegalContent/article29702.htm&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Mitchell, K. (2011, June 13). Where Do Morals Come From? Retrieved January 18, 2018, from &lt;a href=&quot;http://www.wiringthebrain.com/2011/06/where-do-morals-come-from.html&quot;&gt;http://www.wiringthebrain.com/2011/06/where-do-morals-come-from.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Reynolds, G. (2014). Ethics in Information Technology. Cengage Learning.&lt;/li&gt;
  &lt;li&gt;Swartz , A. (2008, July). Guerilla Open Access Manifesto. Retrieved January 18, 2018, from     &lt;a href=&quot;https://archive.org/stream/GuerillaOpenAccessManifesto/Goamjuly2008_djvu.txt&quot;&gt;https://archive.org/stream/GuerillaOpenAccessManifesto/Goamjuly2008_djvu.txt&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Wu, T. (2003). When Code Isn’t Law. Virginia Law Review, 89(4), 679-751.doi:10.2307/3202374&lt;/li&gt;
  &lt;li&gt;17 U.S. Code § 107 - Limitations on exclusive rights: Fair use. (n.d.). Retrieved January 18,   2018, from &lt;a href=&quot;https://www.law.cornell.edu/uscode/text/17/107&quot;&gt;https://www.law.cornell.edu/uscode/text/17/107&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;17 U.S. Code § 506 - Criminal offenses. (n.d.). Retrieved January 18, 2018, from     &lt;a href=&quot;https://www.law.cornell.edu/uscode/text/17/506&quot;&gt;https://www.law.cornell.edu/uscode/text/17/506&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="Thoughts" /><summary type="html">Warning: This post is very long. Read at your own risk. Also as part of my class discussed previously, I had to write a term paper on any topic that my little heart desired, as long as it related to the class. The topic was copyright law in the online realm, and what follows is the paper. Enjoy.</summary></entry><entry><title type="html">Rest Assured</title><link href="htpps://www.doug-skinner.com/projects/2018/01/22/rest-assured.html" rel="alternate" type="text/html" title="Rest Assured" /><published>2018-01-22T12:00:00-05:00</published><updated>2018-01-22T12:00:00-05:00</updated><id>htpps://www.doug-skinner.com/projects/2018/01/22/rest-assured</id><content type="html" xml:base="htpps://www.doug-skinner.com/projects/2018/01/22/rest-assured.html">&lt;p&gt;The website for Rest Assured Home Inspections LLC was redesigned to make it more
attractive for users, allowing it’s content to be more easily understood, and
flow better among various screen sizes. The previous website had the content,
however it was laid out in lack luster way, and was optimized for desktop while
being almost unusable on mobile.&lt;/p&gt;

&lt;p&gt;Straying from my usual design patterns, which closely blend standard bootstrap
elements with the flatter aspects of the material design guidelines by Google, I
chose to keep the site almost entirely native bootstrap, using a darker theme to
align with the original site. The site consists of three main pages: a basic
landing page utilizing rows and columns to layout content, an about page that
contains a manifesto from the company owner, and a page that contains reviews of
the company.&lt;/p&gt;

&lt;p&gt;The page was created using the Jekyll static site generating framework, is
hosted on a Centos 7 server being served by the Apache webserver, and is located
behind an Nginx load-balancer also running on a Centos 7 server. The TLS
ertificate for the site is provided by Let’s Encrypt, and is also being served
by the Nginx load-balancer. The repo for the site can be found my personal
Gitlab, &lt;a href=&quot;http://gitlab.doug-skinner.com/root/restassured&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><summary type="html">The website for Rest Assured Home Inspections LLC was redesigned to make it more attractive for users, allowing it’s content to be more easily understood, and flow better among various screen sizes. The previous website had the content, however it was laid out in lack luster way, and was optimized for desktop while being almost unusable on mobile.</summary></entry></feed>